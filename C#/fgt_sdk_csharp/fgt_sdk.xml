<?xml version="1.0"?>
<doc>
    <assembly>
        <name>fgt_sdk</name>
    </assembly>
    <members>
        <member name="T:fgt_sdk.Enums.fgt_ERROR_CODE">
            <summary>
            Returned error codes from dll functions
            </summary>
        </member>
        <member name="T:fgt_sdk.Enums.fgt_INSTRUMENT_TYPE">
            <summary>
            Instrument controller type
            </summary>
        </member>
        <member name="T:fgt_sdk.Enums.fgt_POWER">
            <summary>
            Power state
            </summary>
        </member>
        <member name="T:fgt_sdk.Enums.fgt_SENSOR_CALIBRATION">
            <summary>
            Sensor calibration table
            </summary>
        </member>
        <member name="T:fgt_sdk.Enums.fgt_SENSOR_TYPE">
            <summary>
            Sensor type
            </summary>
        </member>
        <member name="T:fgt_sdk.Enums.fgt_TTL_MODE">
            <summary>
            TTL setting mode
            </summary>
        </member>
        <member name="M:fgt_sdk.fgtSdk.ErrCheck(fgt_sdk.Enums.fgt_ERROR_CODE,fgt_sdk.Enums.fgt_ERRCHECK_TYPE,System.UInt32,System.String)">
            <summary>
            This method logs to the console detailed information in case an error code has been returned by a low level function
            </summary>
            <param name="errorCode">Error code returned by a low level call</param>
            <param name="type">Type of check to perform</param>
            <param name="index">Pressure or sensor index the low level function used</param>
            <param name="memberName"></param>
            <returns>The error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> that was returned by the low level function</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_init">
            <summary>
            Initialize or reinitialize (if already opened) Fluigent SDK instance. All detected Fluigent instruments (MFCS, MFCS-EZ, FRP, LineUP) are initialized.
            This function is optional, directly calling a function will automatically creates the instance.
            Only one instance can be opened at once.If called again, session is reinitialized.
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_close">
            <summary>
            Close communication with Fluigent instruments and free memory.
            This function is mandatory, if not called the dll will will generate an exception will generate an exception when exiting your application.
            Using this function will remove session preferences such as units and limits.If any regulation is running it will stop pressure control.
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_detect">
            <summary>
            Detects all connected Fluigent instrument(s)
            </summary>
            <returns>Instruments count and their serial numbers and types</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_initEx(System.Collections.Generic.List{System.UInt16})">
            <summary>
            Initialize specific Fluigent instrument(s) from their unique serial number.
            This function can be used when multiple instruments are connected in order to select your device(s)
            </summary>
            <param name="serialNumbers">List of instruments' serial numbers</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_controllersInfo">
            <summary>
            Retrieve information about session controllers. Controllers are MFCS, Flowboard, Link in an array.
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and a list of <see cref="T:fgt_sdk.Structs.fgt_CONTROLLER_INFO"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_pressureChannelCount">
            <summary>
            Get total number of initialized pressure channels. It is the sum of all MFCS, MFCS-EZ and FlowEZ pressure controllers
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and pressure channels count</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_sensorChannelCount">
            <summary>
            Get total number of initialized sensor channels. It is the sum of all connected flow-units on Flowboard and FlowEZ
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and sensor channels count</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_TtlChannelCount">
            <summary>
            Get total number of initialized TTL channels. It is the sum of all connected Link TTL ports
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and Ttl channels count</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_pressureChannelsInfo">
            <summary>
            Retrieve information about each initialized pressure channel. This function is useful in order to get channels order, controller, unique ID and intrument type.
            By default this array is built with MFCS first, MFCS-EZ second and FlowEZ last.If only one instrument is used, index is the default channel indexing starting at 0.
            You can initialize instruments in specific order using <see cref="M:fgt_sdk.fgtSdk.Fgt_initEx(System.Collections.Generic.List{System.UInt16})"/> function
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and a list of <see cref="T:fgt_sdk.Structs.fgt_CHANNEL_INFO"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_sensorChannelsInfo">
            <summary>
            Retrieve information about each initialized sensor channel.This function is useful in order to get channels order, controller, unique ID and instrument type.
            By default this array is built with FRP first then FlowEZ and contains flow-units.If only one instrument is used, index is the default channel indexing starting at 0.
            You can initialize instruments in specific order using <see cref="M:fgt_sdk.fgtSdk.Fgt_initEx(System.Collections.Generic.List{System.UInt16})"/> function
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and a list of <see cref="T:fgt_sdk.Structs.fgt_CHANNEL_INFO"/> <see cref="T:fgt_sdk.Enums.fgt_SENSOR_TYPE"/> tuples</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_TtlChannelsInfo">
            <summary>
            Retrieve information about each initialized TTL channel. This function is useful in order to get channels order, controller, unique ID and instrument type.
            TTL channels are only available for LineUP Series, 2 ports for each connected Link
            </summary>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and a list of <see cref="T:fgt_sdk.Structs.fgt_CHANNEL_INFO"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_pressure(System.UInt32,System.Single)">
            <summary>
            Send pressure command to selected device
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <param name="pressure">Pressure order in selected unit, default is "mbar"</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_pressure(System.UInt32)">
            <summary>
            Read pressure value of selected device
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and current pressure</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_pressureEx(System.UInt32)">
            <summary>
            Read pressure value and time stamp of selected device. Time stamp is the device internal timer.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/>, current pressure and device internal timer value</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_sensorRegulation(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Start closed loop regulation between a sensor and a pressure controller. Pressure will be regulated in order to reach sensor setpoint.
            Call again this function in order to change the setpoint.Calling fgt_set_pressure on same pressureIndex will stop regulation.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <param name="setpoint">Regulation value to be reached in selected unit, default is "Âµl/min" for flowrate sensors</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_sensorValue(System.UInt32)">
            <summary>
            Read sensor value of selected device
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and current sensor measurement</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_sensorValueEx(System.UInt32)">
            <summary>
            Read sensor value and timestamp of selected device. Time stamp is the device internal timer.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/>, current sensor measurement and device internal timer value</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_sessionPressureUnit(System.String)">
            <summary>
            Set pressure unit for all initialized channels, default value is "mbar". If type is invalid an error is returned.
            Every pressure read value and sent command will then use this unit.
            </summary>
            <param name="unit">Unit to use. Example: "mbar", "millibar", "kPa" ...</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_pressureUnit(System.UInt32,System.String)">
            <summary>
            Set pressure unit on selected pressure device, default value is "mbar". If type is invalid an error is returned.
            Every pressure read value and sent command will then use this unit.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <param name="unit">Unit to use. Example: "mbar", "millibar", "kPa" ...</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_pressureUnit(System.UInt32)">
            <summary>
            Get current unit on selected pressure device, default value is "mbar".
            Every pressure read value and sent command use this unit.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and the current unit string</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_sensorUnit(System.UInt32,System.String)">
            <summary>
            Set sensor unit on selected sensor device, default value is "Âµl/min" for flowunits. If type is invalid an error is returned.
            Every sensor read value and regulation command will then use this unit.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <param name="sensorUnit">Sensor unit string. Example: "Âµl/h", "ulperDay", "microliter/hour" ...</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_sensorUnit(System.UInt32)">
            <summary>
            Get current unit on selected sensor device, default value is "Âµl/min" for flowunits.
            Every sensor read value and regulation command use this unit.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and the current unit string</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_sensorCalibration(System.UInt32,fgt_sdk.Enums.fgt_SENSOR_CALIBRATION)">
            <summary>
            Set used sensor internal calibration table.
            Function is only available for specific sensors (dual type) such as the flow-unit M accepting H2O and IPA
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <param name="table">New calibration table</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_sensorCalibration(System.UInt32)">
            <summary>
            Get sensor's current calibration table.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and the current calibration table <see cref="T:fgt_sdk.Enums.fgt_SENSOR_CALIBRATION"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_sensorCustomScale(System.UInt32,System.ValueTuple{System.Single,System.Single,System.Single})">
            <summary>
            Apply a custom scale factor on sensor read value. This function is useful in order to adapt read sensor value to physical measurement.
            For example if a flow-unit is used with a special oil and it's calibration table is set to H2O, read flowrate is not correct.
            Scale factor is applied using following formula: scaled_value = a* sensor_value + b* sensor_value^2 + c* sensor_value^3
            Note that this scale is also used for the regulation.
            </summary>
            <param name="sensorIndex">sensorIndex Index of sensor channel or unique ID</param>
            <param name="scale">New scale to use - a*x + b*xÂ² + c*xÂ³ </param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_sensorCustomScaleEx(System.UInt32,System.ValueTuple{System.Single,System.Single,System.Single},System.Single)">
            <summary>
            Apply a custom scale factor on sensor measurement. This function is useful in order to adapt read sensor value to physical measurement.
            For example if a flow-unit is used with a special oil and it's calibration table is set to H2O, read flowrate is not correct.
            Scale factor is applied using following formula: scaled_value = a* sensor_value + b* sensor_value^2 + c* sensor_value^3
            When applying a custom scale factor, sensor range may increase very rapidly, SMax parameter is meant to limit this maximal value.
            This function purpose is to be used with the regulation in order to avoid too high maximum range on the sensor.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <param name="scale">New scale to use - a*x + b*xÂ² + c*xÂ³ </param>
            <param name="sMax">SMax after scale maximal value (saturation)</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_calibratePressure(System.UInt32)">
            <summary>
            Calibrate internal pressure sensor depending on atmospheric pressure. After calling this function 0 pressure value corresponds to atmospheric pressure.
            During calibration step no pressure order is accepted.Total duration vary from 3s to 8s.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_customSensorRegulation(System.Single,System.Single,System.Single,System.UInt32)">
            <summary>
            Start closed loop regulation between a sensor and a pressure controller. Pressure will be regulated in order to reach sensor setpoint.
            Custom sensors, outside Fluigent ones, can be used such as different flow-units, pressure, level ...
            However we do not guarantee full compatibility with all sensors.Regulation quality is linked to sensor precision and your set-up.
            In order to use this function, custom used sensor maximum range and measured values has to be updated at least once per second.
            Directly setting pressure on same pressureIndex will stop regulation.
            This function must be called at 1Hz minimum or the regulation will stop.
            </summary>
            <param name="measure">Custom sensor measured value, no unit is required</param>
            <param name="setpoint">Custom sensor regulation goal value, no unit is required</param>
            <param name="maxSensorRange">Custom sensor maximum range, no unit is required</param>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_pressureRange(System.UInt32)">
            <summary>
            Get pressure controller minimum and maximum range. Returned values takes into account set unit, default value is 'mbar'.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and pressure range min and max</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_sensorRange(System.UInt32)">
            <summary>
            Get sensor minimum and maximum range. Returned values takes into account set unit, default value is 'Âµl/min' in case of flow-units.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and sensor range min and max</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_pressureLimit(System.UInt32,System.ValueTuple{System.Single,System.Single})">
            <summary>
            Set pressure working range and ensure that pressure will never exceed this limit. It takes into account current unit, default value is 'mbar'.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <param name="limits">Min/max pressure working range values</param>
            <returns></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_sensorRegulationResponse(System.UInt32,System.UInt32)">
            <summary>
            Set on a running regulation pressure response time. Minimal value is 2 for FlowEZ, 6 for MFCS controllers.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <param name="responseTime">Pressure response time in seconds</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_pressureResponse(System.UInt32,System.Byte)">
            <summary>
            Set pressure controller response. This function can be used to customise response time for your set-up.
            For FlowEZ available values are 0: use of fast switch valves or 1: do not use fast switch valves. Default value is 0.
            For MFCS available values are from 1 to 255. The bigger the value, the longer is the response time. Default value is 5.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <param name="value"></param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_pressureStatus(System.UInt32)">
            <summary>
            Get detailed information of pressure channel status. This function is meant to be invoked after calling a pressure related function which returns an error code.
            Retrieved information of last error contains controller position and a string detail.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/>, the controller type and serial number, the locally controlled information boolean and a string describing the error</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_sensorStatus(System.UInt32)">
            <summary>
            Get detailed information of sensor status. This function is meant to be invoked after calling a sensor related function which returns an error code.
            Retrieved information of last error contains sensor position and a string detail.
            </summary>
            <param name="sensorIndex">Index of sensor channel or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/>, the controller type and serial number, the locally controlled information boolean and a string describing the error</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_power(System.UInt32,fgt_sdk.Enums.fgt_POWER)">
            <summary>
            Set power ON or OFF on a controller (such as Link, MFCS, Flowboard). 
            Not all controllers support this functionality.
            </summary>
            <param name="controllerIndex">Index of controller or unique ID</param>
            <param name="state">New controller power state</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_get_power(System.UInt32)">
            <summary>
            Get power information about a controller (such as Link, MFCS, Flowboard).  
            Not all controllers support this functionality.
            </summary>
            <param name="controllerIndex">Index of controller or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and the controller's power state</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_TtlMode(System.UInt32,fgt_sdk.Enums.fgt_TTL_MODE)">
            <summary>
            Configure a specific TTL port (BNC ports) as input, output, rising or falling edge.
            </summary>
            <param name="TtlIndex">Index of TTL port or unique ID</param>
            <param name="mode">New TTL mode</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_read_Ttl(System.UInt32)">
            <summary>
            Read TTL port (BNC port) if set as input.
            </summary>
            <param name="ttlIndex">Index of TTL port or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and a boolean indicating if an event (edge) has occured</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_trigger_Ttl(System.UInt32)">
            <summary>
            Trigger a specific TTL port (BNC ports) if set as output.
            </summary>
            <param name="ttlIndex">Index of TTL port or unique ID</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/> and a boolean indicating if an event (edge) has occured</returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_purge(System.UInt32,System.Boolean)">
            <summary>
            Activate/deactivate purge function.
            This feature is only available on MFCS devices equipped with special valve.
            </summary>
            <param name="controllerIndex">Index of controller or unique ID</param>
            <param name="purge">Purge state</param>
            <returns>Error code <see cref="T:fgt_sdk.Enums.fgt_ERROR_CODE"/></returns>
        </member>
        <member name="M:fgt_sdk.fgtSdk.Fgt_set_manual(System.UInt32,System.Single)">
            <summary>
            Manually activate internal electrovalve. This stops pressure regulation.
            This feature is only available on MFCS and MFCS-EZ devices.
            </summary>
            <param name="pressureIndex">Index of pressure channel or unique ID</param>
            <param name="value">Applied valve voltage from 0 to 100(%)</param>
            <returns></returns>
        </member>
        <member name="T:fgt_sdk.Structs.fgt_CHANNEL_INFO">
            <summary>
            Structure containing pressure or sensor identification and details
            </summary>
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CHANNEL_INFO.ControllerSN">
            Serial number of this channel's controller 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CHANNEL_INFO.Firmware">
            Firmware version of this channel (0 if not applicable) 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CHANNEL_INFO.DeviceSN">
            Serial number of this channel (0 if not applicable) 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CHANNEL_INFO.Position">
            Position on controller 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CHANNEL_INFO.Index">
            Channel index within its physical quantities family 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CHANNEL_INFO.IndexId">
            Unique channel identifier 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CHANNEL_INFO.InstrType">
            Type of the instrument 
        </member>
        <member name="T:fgt_sdk.Structs.fgt_CONTROLLER_INFO">
            <summary>
            Structure containing controller identification and details
            </summary>
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CONTROLLER_INFO.SN">
            Serial number 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CONTROLLER_INFO.Firmware">
            Firmware version 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CONTROLLER_INFO.Id">
            Index 
        </member>
        <member name="F:fgt_sdk.Structs.fgt_CONTROLLER_INFO.InstrType">
            Instrument type 
        </member>
    </members>
</doc>
